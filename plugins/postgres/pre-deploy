#!/bin/bash
set -e;

echo "-----> Checking status of PostgreSQL"

APP="$1"

function get_postgresql_id() {
    ID=$(docker ps | grep postgresql/"$APP":latest | awk {'print $1'})
    echo $ID
}

function get_postgresql_port() {
    ID=$(get_postgresql_id)
    PORT=$(docker port "$ID" 5432 | sed 's/0.0.0.0://')
    echo $PORT
}


PG_APP_IMAGE="postgresql/$APP"
PG_VOLUME_PATH="$DOKKU_ROOT/.postgresql/volume_$APP"

# Check if an existing DB volume exists
PG_APP_IMAGE_ID=$(docker images | grep "$PG_APP_IMAGE" |  awk '{print $3}')
if [[ -n $PG_APP_IMAGE_ID ]] && [[ -f $PG_VOLUME_PATH ]]; then

    echo    "       Found image postgresql/$APP database"
    echo -n "       Checking status... "

    PG_APP_CONTAINER_ID=$(docker ps | grep "$PG_APP_IMAGE" |  awk '{print $1}')
    if [[ -n $PG_APP_CONTAINER_ID ]]; then
        echo "ok."
    else
        echo "stopped."

		DB_PASSWORD=$(cat "$DOKKU_ROOT/.postgresql/pwd_$APP")
		PG_VOLUME="`cat $PG_VOLUME_PATH`:/opt/postgresql"

        echo -n "       Launching $PG_APP_IMAGE... "
        echo "COMMAND: docker run -v $PG_VOLUME -p 5432 -d $PG_APP_IMAGE /usr/bin/start_pgsql.sh $DB_PASSWORD"
        ID=$(docker run -v $PG_VOLUME -p 5432 -d $PG_APP_IMAGE /usr/bin/start_pgsql.sh $DB_PASSWORD)
        sleep 1
        echo "ok."
    fi

	# Update DATABASE_URL environment variable
	PG_PORT=$(docker port "$PG_APP_IMAGE_ID" 5432 | sed 's/0.0.0.0://')
	dokku config:set:norestart $APP "DATABASE_URL=postgres://root:$DB_PASSWORD@172.17.42.1:$PG_PORT/db"
fi
