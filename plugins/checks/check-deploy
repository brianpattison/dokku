#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$2"; PORT="$3"

if ! [[ -f "$DOKKU_ROOT/$APP/CONTAINER" ]]; then
  # Allow the app to be deployed the first time
  exit 0
fi

# source in app env to get DOKKU_CHECKS_WAIT and any other necessary vars
[[ -f "$DOKKU_ROOT/$APP/ENV" ]] && source $DOKKU_ROOT/$APP/ENV
echo "DOKKU_CHECKS_WAIT is $DOKKU_CHECKS_WAIT"
FILENAME="$DOKKU_ROOT/$APP/CHECKS"
WAIT="${DOKKU_CHECKS_WAIT:-5}"
MAX_ATTEMPTS=5

echo "Waiting $WAIT seconds ..."
sleep $WAIT

# -q           do not use .curlrc (must come first)
# --compressed Test compression handled correctly
# --fail       Fail on server errors (4xx, 5xx)
# --location   Follow redirects
CURL_OPTIONS="-q --compressed --fail --location --max-time 30"
URL="http://localhost:$PORT/"

attempts=0
success=false

until [ $attempts -ge $MAX_ATTEMPTS ]
do
	echo "checking with: curl $CURL_OPTIONS $URL"
	if OUTPUT=$(curl -I $CURL_OPTIONS $URL 2>&1) ; then
		if [[ "$OUTPUT" =~ "HTTP/1.1 200 OK" ]] ; then
			success=true
			echo "HTTP/1.1 200 OK" && break
		fi
	fi
	attempts=$[$attempts+1]
	echo "FAILED ATTEMPT #$attempts"
	echo "Response:"
	echo $OUTPUT
	echo "Waiting $WAIT seconds ..."
	sleep $WAIT
done

if $success ; then
	echo -e "\033[32m\033[1mAll checks successful!\033[0m"
else
	echo "FAILED TO LOAD APP"
	exit 2
fi
